trigger:
  - main

pool:
  vmImage: 'ubuntu-18.04'

variables:
  - group: Deployment

stages:
  - stage: Build
    jobs:
      - job: BuildFrontend
        steps:
          - checkout: self
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Install Node.js'

          - script: |
              cd .\war-of-heroes\
              npm install -g @angular/cli
              yarn install
              yarn build --prod
            displayName: 'install and build'
          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/WarOfHeroes'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true
  
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  - stage: Deploy
    jobs:
      - job: Deploy
        steps:
        - checkout: self
        - script: |
            terraform init
            terraform plan
            terraform apply -auto-approve
          workingDirectory: "$(System.DefaultWorkingDirectory)/war-of-heroes/Deployment/"
          env:
            ARM_SUBSCRIPTION_ID: $(SUBSCRIPTION-ID)
            ARM_TENANT_ID: $(TERRAFORM-TENANT-ID)      
            ARM_ACCESS_KEY: $(TF-ACCESS-KEY)        
            ARM_CLIENT_ID: $(TERRAFORM-CLIENT-ID)
            ARM_CLIENT_SECRET: $(TERRAFORM-CLIENT-SECRET)
        - task: DownloadPipelineArtifact@2
          inputs:
              buildType: "current"
              artifactName: "drop"
              targetPath: "$(System.DefaultWorkingDirectory)"
        - task: AzureRmWebAppDeployment@4
          inputs:
              ConnectionType: "AzureRM"
              azureSubscription: "warOfHeroes"
              appType: "webApp"
              WebAppName: "warOfHeroes"
              packageForLinux: "$(System.DefaultWorkingDirectory)/WarOfHeroes.zip"